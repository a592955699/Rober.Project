@{
    var defaultGridPageSize = 10;
    var gridPageSizes = "10,20,50,100";
    Html.SetActiveMenuItemSystemName("我的日历");
}

<script>
    $(function () {
        function scheduler_dataBinding(e) {
            console.log("dataBinding");
        }

        function scheduler_dataBound(e) {
            console.log("dataBound");
        }

        function scheduler_save(e) {
            console.log("save");
        }

        function scheduler_remove(e) {
            console.log("remove");
        }

        function scheduler_cancel(e) {
            console.log("cancel");
        }

        function scheduler_change(e) {
            var start = e.start; //selection start date
            var end = e.end; //selection end date
            var slots = e.slots; //list of selected slots
            var events = e.events; //list of selected Scheduler events

            var message = "change:: selection from {0:g} till {1:g}";

            if (events.length) {
                message += ". The selected event is '" + events[events.length - 1].title + "'";
            }

            console.log(kendo.format(message, start, end));
        }

        function scheduler_edit(e) {
            console.log("edit");
        }

        function scheduler_add(e) {
            console.log("add");
        }

        function scheduler_moveStart(e) {
            console.log("moveStart");
        }

        function scheduler_move(e) {
            console.log("move");
        }

        function scheduler_moveEnd(e) {
            console.log("moveEnd");
        }

        function scheduler_resizeStart(e) {
            console.log("resizeStart");
        }

        function scheduler_resize(e) {
            console.log("resize");
        }

        function scheduler_resizeEnd(e) {
            console.log("resizeEnd");
        }

        function scheduler_navigate(e) {
            console.log(kendo.format("navigate:: action:{0}; view:{1}; date:{2:d};", e.action, e.view, e.date));
        }

        var dataSource = new kendo.data.SchedulerDataSource({
            batch: true,
            transport: {
                read: {
                    url: "@Url.Action("MySchedulerRead")",
                    type: "GET",
                    contentType: "application/json",
                    dataType: "json",
                    data: additionalData
                },
                update: {
                    url: "https://demos.telerik.com/kendo-ui/service/tasks/update",
                    dataType: "jsonp"
                },
                create: {
                    url: "https://demos.telerik.com/kendo-ui/service/tasks/create",
                    dataType: "jsonp"
                },
                destroy: {
                    url: "https://demos.telerik.com/kendo-ui/service/tasks/destroy",
                    dataType: "jsonp"
                },
                parameterMap: function (options, operation) {
                    if (operation !== "read") {
                        if (options.models)
                            return JSON.stringify(options.models);
                        else
                            return JSON.stringify(options);
                    } else {
                        return options;
                    }
                }
            },
            schema: {
                errors: "Data.Message",
                data: "Data.Data",
                model: {
                    id: "Id",
                    fields: {
                        taskID: { from: "Id", type: "number" },
                        title: { from: "Title", defaultValue: "No title", validation: { required: true } },
                        start: { type: "StartTime", from: "Start" },
                        end: { type: "EndTime", from: "End" },
                        //startTimezone: { from: "StartTimezone" },
                        //endTimezone: { from: "EndTimezone" },
                        description: { from: "Content" }
                        //,recurrenceId: { from: "RecurrenceID" },
                        //recurrenceRule: { from: "RecurrenceRule" },
                        //recurrenceException: { from: "RecurrenceException" },
                        //ownerId: { from: "OwnerID", defaultValue: 1 },
                        //isAllDay: { type: "boolean", from: "IsAllDay" }
                    }
                }
            }
        });

        $("#scheduler").kendoScheduler({
            views: [
                "day",
                { type: "week" },
                { type: "month", selected: true }
            ],
            selectable: false,
            dataBinding: scheduler_dataBinding,
            dataBound: scheduler_dataBound,
            save: scheduler_save,
            remove: scheduler_remove,
            edit: scheduler_edit,
            add: scheduler_add,
            cancel: scheduler_cancel,
            change: scheduler_change,
            moveStart: scheduler_moveStart,
            move: scheduler_move,
            moveEnd: scheduler_moveEnd,
            resizeStart: scheduler_resizeStart,
            resize: scheduler_resize,
            resizeEnd: scheduler_resizeEnd,
            navigate: scheduler_navigate,
            dataSource: dataSource
        });
    });
    function additionalData() {
        var data = {
            view:"day",
            date: "2018-09-06"
        };
        return data;
    }
</script>
<style>
    #scheduler {
        width: 100%;
        height: 100%;
    }
</style>
<div id="example">
    <div id="scheduler"></div>
</div>